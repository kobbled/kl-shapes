PROGRAM class_name
%NOBUSYLAMP
%COMMENT = 'mesh object'
%NOLOCKGROUP
%UNINITVARS

%include namespace.m

%include errors.klt
%include mesh.klt

%from errors.klh %import karelError, CHK_STAT
%include mesh.klh


-- ** private **

ROUTINE clear
  VAR
    status : INTEGER
  BEGIN
    WHILE PATH_LEN(polygons) > 0 DO
		  DELETE_NODE(polygons,1,status)
	  ENDWHILE
  END clear

ROUTINE append(p : t_POLYGON )
  VAR
    status : INTEGER
  BEGIN
    APPEND_NODE(polygons,status)
    CHK_STAT(status)
		length = PATH_LEN(polygons)
    polygons[length] = p
  END append

ROUTINE calc_normal( points : ARRAY OF VECTOR) : VECTOR
  BEGIN
    RETURN( (points[2]-points[1])#(points[3]-points[1]) )
  END calc_normal

ROUTINE calc_centroid( points : ARRAY OF VECTOR) : VECTOR
  VAR
    c : VECTOR
  BEGIN
    c.x = (points[1].x + points[2].x + points[3].x)/3
    c.y = (points[1].y + points[2].y + points[3].y)/3
    c.z = (points[1].z + points[2].z + points[3].z)/3

    RETURN(c)
  END calc_centroid

-- ** public **

ROUTINE new
  BEGIN
    clear
    centroid.x = 0 ; centroid.y =0 ; centroid.z =0 ;
  END new

ROUTINE add_polygon
  VAR
    p : t_POLYGON
  BEGIN
    IF ARRAY_LEN(vertices) <> 3 THEN
      karelError(ARR_LEN_MISMATCH,'3 verticies are needed to build a polygon', ER_ABORT)
    ENDIF

    p.verts[1] = vertices[1] ; p.verts[2] = vertices[2] ; p.verts[3] = vertices[3] ;
    p.normal = calc_normal(p.verts)
    p.center = calc_centroid(p.verts)

    append(p)

  END add_polygon

